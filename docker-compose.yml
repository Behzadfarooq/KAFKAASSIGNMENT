
version: '2'
services:
  zookeeper:
    image: bitnami/zookeeper:latest
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes
    ports:
      - "2181:2181"
    platform: linux/arm64
    restart: always
    networks:
      - kafka_network

  kafka:
    image: wurstmeister/kafka:latest
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_CREATE_TOPICS: "wordentity:1:1"
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    platform: linux/arm64
    restart: always
    networks:
      - kafka_network

  mysql:
    image: mysql
    container_name: mydb
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DB_NAME}
    ports:
      - "3306:3306"
    platform: linux/arm64
    networks:
      - kafka_network

  producer:
    build:
      context: ./producer
      dockerfile: Dockerfile
    depends_on:
      - kafka
    environment:
      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
      KAFKA_TOPIC: wordentity
    ports:
      - "5000:5000"
    platform: linux/arm64
    restart: always
    networks:
      - kafka_network

  consumer:
    build:
      context: ./consumer
      dockerfile: Dockerfile
    depends_on:
      - producer
      - mysql
    environment:
      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DB_NAME: ${MYSQL_DB_NAME}
      MYSQL_PORT: ${MYSQL_PORT}
    ports:
      - "8080:8080"
    platform: linux/arm64
    restart: always
    networks:
      - kafka_network

networks:
  kafka_network: